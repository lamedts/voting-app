# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import vote_pb2 as vote__pb2


class VoteWorkerServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetVotes = channel.unary_stream(
        '/pb.VoteWorkerService/GetVotes',
        request_serializer=vote__pb2.WorkerRequest.SerializeToString,
        response_deserializer=vote__pb2.Vote.FromString,
        )
    self.GetVotesResults = channel.unary_stream(
        '/pb.VoteWorkerService/GetVotesResults',
        request_serializer=vote__pb2.WorkerRequest.SerializeToString,
        response_deserializer=vote__pb2.VoteResults.FromString,
        )
    self.SetVote = channel.unary_unary(
        '/pb.VoteWorkerService/SetVote',
        request_serializer=vote__pb2.Vote.SerializeToString,
        response_deserializer=vote__pb2.VoteStatus.FromString,
        )
    self.GetVote = channel.unary_unary(
        '/pb.VoteWorkerService/GetVote',
        request_serializer=vote__pb2.Vote.SerializeToString,
        response_deserializer=vote__pb2.Vote.FromString,
        )


class VoteWorkerServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetVotes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVotesResults(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetVote(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVote(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VoteWorkerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetVotes': grpc.unary_stream_rpc_method_handler(
          servicer.GetVotes,
          request_deserializer=vote__pb2.WorkerRequest.FromString,
          response_serializer=vote__pb2.Vote.SerializeToString,
      ),
      'GetVotesResults': grpc.unary_stream_rpc_method_handler(
          servicer.GetVotesResults,
          request_deserializer=vote__pb2.WorkerRequest.FromString,
          response_serializer=vote__pb2.VoteResults.SerializeToString,
      ),
      'SetVote': grpc.unary_unary_rpc_method_handler(
          servicer.SetVote,
          request_deserializer=vote__pb2.Vote.FromString,
          response_serializer=vote__pb2.VoteStatus.SerializeToString,
      ),
      'GetVote': grpc.unary_unary_rpc_method_handler(
          servicer.GetVote,
          request_deserializer=vote__pb2.Vote.FromString,
          response_serializer=vote__pb2.Vote.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.VoteWorkerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
